---
- name: Provision kubervirt VMs
  hosts: localhost
  become: false
#  gather_facts: yes
  vars_files:
    - secrets_folder/ovirt-pass
#      - /home/bdumont/vars/global_vars.yml
    - vars/provision_vars.yml

  tasks:

    - name: Log in (obtain access token)
#      community.okd.openshift_auth:
      redhat.openshift.openshift_auth:
        host: "{{ openshift_host }}"
        username: bdumont
        password: "{{ ovirt_password }}"
        validate_certs: no
      register: openshift_auth_results


    - name: create vms
      kubevirt.core.kubevirt_vm:
        host: "{{ openshift_host }}"
        api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
        validate_certs: false
        state: present              
        name: "{{ vm_name }}-{{ item }}.dumont-lab.lan"
        namespace: "{{ vm_namespace }}"
        wait: true
#        wait_timeout: 360
        instancetype: lab-vm-instancetype
        labels: 
          compliance_policy: "{{ compliance_type }}"
          authentication_source: lab_idm
        spec:
          domain:
            devices:
              disks:
                - disk:
                  bus: virtio
                  name: cloudinitdisk
                - bootOrder: 1
                  disk:
                  bus: virtio
                  name: rootdisk
              interfaces:
                - bridge: {}
                  model: virtio
                  name: vm-net
                - name: default
                  masquerade: {}
  
#                  machine:
#                    type: pc-q35-rhel8.4.0
          hostname: "{{ vm_name }}-{{ item }}"
          networks:
            - multus:
              networkName: vm-bridge-network
              name: vm-net
            - name: default
              pod: {}
          volumes:
            - cloudInitNoCloud:
              userData: |
                #cloud-config
                user: kubevirt
                password: "{{ ovirt_password }}"
                chpasswd:
                  expire: false
                ssh_authorized_keys: 
                  - "{{ ansible_key }}"
                hostname: "{{ vm_name }}"
                fqdn: "{{ vm_name }}-{{ item }}.dumont-lab.lan"
                  prefer_fqdn_over_hostname: true
                name: cloudinitdisk
            - dataVolume:
                name: "{{ vm_name }}-{{ item }}-rootdisk"
              name: rootdisk
        dataVolumeTemplates:
          - metadata:
              name: "{{ vm_name }}-{{ item }}-rootdisk"
            spec:
              pvc:
                accessModes:      
                  - ReadWriteMany
                resources:
                  requests:
                    storage: 35Gi
                storageClassName: ocs-storagecluster-ceph-rbd
                volumeMode: Block
              source:      
                pvc:
                  name: "{{ pvc_claimname }}"
                  namespace: virtual-machines
      with_sequence: count={{ vm_count }}

